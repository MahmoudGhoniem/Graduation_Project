
servo motor2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000122  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000122  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000575  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000121  00000000  00000000  00000ee5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b9  00000000  00000000  00001006  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000010e  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e2       	ldi	r30, 0x22	; 34
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "std_macros.h"
#define F_CPU 8000000UL
#include <util/delay.h>
int main(void)
{
	SET_BIT(DDRD,0);
  92:	88 9a       	sbi	0x11, 0	; 17
    while(1)
    {
		SET_BIT(PORTD,0);
  94:	90 9a       	sbi	0x12, 0	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  96:	8f ec       	ldi	r24, 0xCF	; 207
  98:	97 e0       	ldi	r25, 0x07	; 7
  9a:	01 97       	sbiw	r24, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <main+0x8>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <main+0xe>
  a0:	00 00       	nop
		_delay_ms(1);
		CLR_BIT(PORTD,0);
  a2:	90 98       	cbi	0x12, 0	; 18
  a4:	8f ef       	ldi	r24, 0xFF	; 255
  a6:	99 e6       	ldi	r25, 0x69	; 105
  a8:	a8 e1       	ldi	r26, 0x18	; 24
  aa:	81 50       	subi	r24, 0x01	; 1
  ac:	90 40       	sbci	r25, 0x00	; 0
  ae:	a0 40       	sbci	r26, 0x00	; 0
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x18>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x22>
  b4:	00 00       	nop
		_delay_ms(1000);
		
		
         SET_BIT(PORTD,0);
  b6:	90 9a       	sbi	0x12, 0	; 18
  b8:	a7 eb       	ldi	r26, 0xB7	; 183
  ba:	bb e0       	ldi	r27, 0x0B	; 11
  bc:	11 97       	sbiw	r26, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <main+0x2a>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <main+0x30>
  c2:	00 00       	nop
		 _delay_ms(1.5);
		 CLR_BIT(PORTD,0);
  c4:	90 98       	cbi	0x12, 0	; 18
  c6:	8f ef       	ldi	r24, 0xFF	; 255
  c8:	99 e6       	ldi	r25, 0x69	; 105
  ca:	a8 e1       	ldi	r26, 0x18	; 24
  cc:	81 50       	subi	r24, 0x01	; 1
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	a0 40       	sbci	r26, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x3a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x44>
  d6:	00 00       	nop
		 _delay_ms(1000);
		
		 
		 
		  SET_BIT(PORTD,0);
  d8:	90 9a       	sbi	0x12, 0	; 18
  da:	af e9       	ldi	r26, 0x9F	; 159
  dc:	bf e0       	ldi	r27, 0x0F	; 15
  de:	11 97       	sbiw	r26, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <main+0x4c>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x52>
  e4:	00 00       	nop
		  _delay_ms(2);
		  CLR_BIT(PORTD,0);
  e6:	90 98       	cbi	0x12, 0	; 18
  e8:	8f ef       	ldi	r24, 0xFF	; 255
  ea:	99 e6       	ldi	r25, 0x69	; 105
  ec:	a8 e1       	ldi	r26, 0x18	; 24
  ee:	81 50       	subi	r24, 0x01	; 1
  f0:	90 40       	sbci	r25, 0x00	; 0
  f2:	a0 40       	sbci	r26, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x5c>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x66>
  f8:	00 00       	nop
		  _delay_ms(1000); 
		  
		   SET_BIT(PORTD,0);
  fa:	90 9a       	sbi	0x12, 0	; 18
  fc:	a7 eb       	ldi	r26, 0xB7	; 183
  fe:	bb e0       	ldi	r27, 0x0B	; 11
 100:	11 97       	sbiw	r26, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x6e>
 104:	00 c0       	rjmp	.+0      	; 0x106 <main+0x74>
 106:	00 00       	nop
		   _delay_ms(1.5);
		   CLR_BIT(PORTD,0);
 108:	90 98       	cbi	0x12, 0	; 18
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	99 e6       	ldi	r25, 0x69	; 105
 10e:	a8 e1       	ldi	r26, 0x18	; 24
 110:	81 50       	subi	r24, 0x01	; 1
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	a0 40       	sbci	r26, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <main+0x7e>
 118:	00 c0       	rjmp	.+0      	; 0x11a <main+0x88>
 11a:	00 00       	nop
 11c:	bb cf       	rjmp	.-138    	; 0x94 <main+0x2>

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
