
servo motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000322  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000322  00000396  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000135c  00000000  00000000  00000398  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000045c  00000000  00000000  000016f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a0  00000000  00000000  00001b50  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000495  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000179  00000000  00000000  00002085  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041b  00000000  00000000  000021fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  0000261c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000178  00000000  00000000  00002694  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000001e  00000000  00000000  0000280c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e2       	ldi	r30, 0x22	; 34
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 8f 01 	jmp	0x31e	; 0x31e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
	//while(1)
	//{
		//timer1_wave_fastPWM(1.5);
		//_delay_ms(1000);
		
		timer1_wave_fastPWM(2);
  92:	60 e0       	ldi	r22, 0x00	; 0
  94:	70 e0       	ldi	r23, 0x00	; 0
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	90 e4       	ldi	r25, 0x40	; 64
  9a:	0e 94 7b 00 	call	0xf6	; 0xf6 <timer1_wave_fastPWM>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9e:	8f e9       	ldi	r24, 0x9F	; 159
  a0:	96 e8       	ldi	r25, 0x86	; 134
  a2:	a1 e0       	ldi	r26, 0x01	; 1
  a4:	81 50       	subi	r24, 0x01	; 1
  a6:	90 40       	sbci	r25, 0x00	; 0
  a8:	a0 40       	sbci	r26, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x12>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x1c>
  ae:	00 00       	nop
		//_delay_ms(1000);
		//timer1_wave_fastPWM(2.5);
		//_delay_ms(1000);
	//}

}
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	08 95       	ret

000000b6 <timer_CTC_init_interrupt>:
#include <avr/io.h>
#include <avr/interrupt.h>
void timer_CTC_init_interrupt(void)
{
	/* select CTC mode*/
	SET_BIT(TCCR0,WGM01);
  b6:	83 b7       	in	r24, 0x33	; 51
  b8:	88 60       	ori	r24, 0x08	; 8
  ba:	83 bf       	out	0x33, r24	; 51
	/* load a value in OCR0 */
	OCR0=80;
  bc:	80 e5       	ldi	r24, 0x50	; 80
  be:	8c bf       	out	0x3c, r24	; 60
	/* select timer clock */	
	SET_BIT(TCCR0,CS00);
  c0:	83 b7       	in	r24, 0x33	; 51
  c2:	81 60       	ori	r24, 0x01	; 1
  c4:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,CS02);
  c6:	83 b7       	in	r24, 0x33	; 51
  c8:	84 60       	ori	r24, 0x04	; 4
  ca:	83 bf       	out	0x33, r24	; 51
	/* enable interrupt*/
	sei();
  cc:	78 94       	sei
	SET_BIT(TIMSK,OCIE0);
  ce:	89 b7       	in	r24, 0x39	; 57
  d0:	82 60       	ori	r24, 0x02	; 2
  d2:	89 bf       	out	0x39, r24	; 57
}
  d4:	08 95       	ret

000000d6 <timer_wave_nonPWM>:


void timer_wave_nonPWM(void)
{
	/* set OC0 as output pin */
	SET_BIT(DDRB,3);
  d6:	bb 9a       	sbi	0x17, 3	; 23
	/* select CTC mode*/
	SET_BIT(TCCR0,WGM01);
  d8:	83 b7       	in	r24, 0x33	; 51
  da:	88 60       	ori	r24, 0x08	; 8
  dc:	83 bf       	out	0x33, r24	; 51
	/* load a value in OCR0 */
	OCR0=64;
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	8c bf       	out	0x3c, r24	; 60
	/* select timer clock */
	SET_BIT(TCCR0,CS00);
  e2:	83 b7       	in	r24, 0x33	; 51
  e4:	81 60       	ori	r24, 0x01	; 1
  e6:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,CS02);
  e8:	83 b7       	in	r24, 0x33	; 51
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	83 bf       	out	0x33, r24	; 51
	/* toggle OC0 on compare match*/
	SET_BIT(TCCR0,COM00);
  ee:	83 b7       	in	r24, 0x33	; 51
  f0:	80 61       	ori	r24, 0x10	; 16
  f2:	83 bf       	out	0x33, r24	; 51
}
  f4:	08 95       	ret

000000f6 <timer1_wave_fastPWM>:

void timer1_wave_fastPWM(double value)
{
	/* set OC1A as output pin */
	SET_BIT(DDRD,5);
  f6:	8d 9a       	sbi	0x11, 5	; 17
	/* select fast PWM mode*/
	SET_BIT(TCCR1A,WGM11);
  f8:	2f b5       	in	r18, 0x2f	; 47
  fa:	22 60       	ori	r18, 0x02	; 2
  fc:	2f bd       	out	0x2f, r18	; 47
	SET_BIT(TCCR1B,WGM12);
  fe:	2e b5       	in	r18, 0x2e	; 46
 100:	28 60       	ori	r18, 0x08	; 8
 102:	2e bd       	out	0x2e, r18	; 46
	SET_BIT(TCCR1B,WGM13);
 104:	2e b5       	in	r18, 0x2e	; 46
 106:	20 61       	ori	r18, 0x10	; 16
 108:	2e bd       	out	0x2e, r18	; 46
	/* load a value in OCR1A,ICR1 */
	OCR1A=value*1000;
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	4a e7       	ldi	r20, 0x7A	; 122
 110:	54 e4       	ldi	r21, 0x44	; 68
 112:	0e 94 04 01 	call	0x208	; 0x208 <__mulsf3>
 116:	0e 94 af 00 	call	0x15e	; 0x15e <__fixunssfsi>
 11a:	dc 01       	movw	r26, r24
 11c:	cb 01       	movw	r24, r22
 11e:	9b bd       	out	0x2b, r25	; 43
 120:	8a bd       	out	0x2a, r24	; 42
	ICR1=19999;
 122:	8f e1       	ldi	r24, 0x1F	; 31
 124:	9e e4       	ldi	r25, 0x4E	; 78
 126:	97 bd       	out	0x27, r25	; 39
 128:	86 bd       	out	0x26, r24	; 38
	/* select timer clock, no prescaling */
	SET_BIT(TCCR1B,CS10);
 12a:	8e b5       	in	r24, 0x2e	; 46
 12c:	81 60       	ori	r24, 0x01	; 1
 12e:	8e bd       	out	0x2e, r24	; 46
	/* clear OC1A on compare match, set OC1A at BOTTOM,(non inverting mode)*/
	SET_BIT(TCCR1A,COM1A1);
 130:	8f b5       	in	r24, 0x2f	; 47
 132:	80 68       	ori	r24, 0x80	; 128
 134:	8f bd       	out	0x2f, r24	; 47
}
 136:	08 95       	ret

00000138 <timer_wave_phasecorrectPWM>:


void timer_wave_phasecorrectPWM(void)
{
	/* set OC0 as output pin */
	SET_BIT(DDRB,3);
 138:	bb 9a       	sbi	0x17, 3	; 23
	/* select phase correct PWM mode*/
	SET_BIT(TCCR0,WGM00);
 13a:	83 b7       	in	r24, 0x33	; 51
 13c:	80 64       	ori	r24, 0x40	; 64
 13e:	83 bf       	out	0x33, r24	; 51
	/* load a value in OCR0 */
	OCR0=64;
 140:	80 e4       	ldi	r24, 0x40	; 64
 142:	8c bf       	out	0x3c, r24	; 60
	/* select timer clock */
	SET_BIT(TCCR0,CS00);
 144:	83 b7       	in	r24, 0x33	; 51
 146:	81 60       	ori	r24, 0x01	; 1
 148:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,CS02);
 14a:	83 b7       	in	r24, 0x33	; 51
 14c:	84 60       	ori	r24, 0x04	; 4
 14e:	83 bf       	out	0x33, r24	; 51
	/* Set OC0 on compare match when up-counting. Clear OC0 on compare match when down counting.*/
	SET_BIT(TCCR0,COM00);
 150:	83 b7       	in	r24, 0x33	; 51
 152:	80 61       	ori	r24, 0x10	; 16
 154:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,COM01);
 156:	83 b7       	in	r24, 0x33	; 51
 158:	80 62       	ori	r24, 0x20	; 32
 15a:	83 bf       	out	0x33, r24	; 51
}
 15c:	08 95       	ret

0000015e <__fixunssfsi>:
 15e:	33 d0       	rcall	.+102    	; 0x1c6 <__fp_splitA>
 160:	88 f0       	brcs	.+34     	; 0x184 <__fixunssfsi+0x26>
 162:	9f 57       	subi	r25, 0x7F	; 127
 164:	90 f0       	brcs	.+36     	; 0x18a <__fixunssfsi+0x2c>
 166:	b9 2f       	mov	r27, r25
 168:	99 27       	eor	r25, r25
 16a:	b7 51       	subi	r27, 0x17	; 23
 16c:	a0 f0       	brcs	.+40     	; 0x196 <__fixunssfsi+0x38>
 16e:	d1 f0       	breq	.+52     	; 0x1a4 <__fixunssfsi+0x46>
 170:	66 0f       	add	r22, r22
 172:	77 1f       	adc	r23, r23
 174:	88 1f       	adc	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	1a f0       	brmi	.+6      	; 0x180 <__fixunssfsi+0x22>
 17a:	ba 95       	dec	r27
 17c:	c9 f7       	brne	.-14     	; 0x170 <__fixunssfsi+0x12>
 17e:	12 c0       	rjmp	.+36     	; 0x1a4 <__fixunssfsi+0x46>
 180:	b1 30       	cpi	r27, 0x01	; 1
 182:	81 f0       	breq	.+32     	; 0x1a4 <__fixunssfsi+0x46>
 184:	3a d0       	rcall	.+116    	; 0x1fa <__fp_zero>
 186:	b1 e0       	ldi	r27, 0x01	; 1
 188:	08 95       	ret
 18a:	37 c0       	rjmp	.+110    	; 0x1fa <__fp_zero>
 18c:	67 2f       	mov	r22, r23
 18e:	78 2f       	mov	r23, r24
 190:	88 27       	eor	r24, r24
 192:	b8 5f       	subi	r27, 0xF8	; 248
 194:	39 f0       	breq	.+14     	; 0x1a4 <__fixunssfsi+0x46>
 196:	b9 3f       	cpi	r27, 0xF9	; 249
 198:	cc f3       	brlt	.-14     	; 0x18c <__fixunssfsi+0x2e>
 19a:	86 95       	lsr	r24
 19c:	77 95       	ror	r23
 19e:	67 95       	ror	r22
 1a0:	b3 95       	inc	r27
 1a2:	d9 f7       	brne	.-10     	; 0x19a <__fixunssfsi+0x3c>
 1a4:	3e f4       	brtc	.+14     	; 0x1b4 <__fixunssfsi+0x56>
 1a6:	90 95       	com	r25
 1a8:	80 95       	com	r24
 1aa:	70 95       	com	r23
 1ac:	61 95       	neg	r22
 1ae:	7f 4f       	sbci	r23, 0xFF	; 255
 1b0:	8f 4f       	sbci	r24, 0xFF	; 255
 1b2:	9f 4f       	sbci	r25, 0xFF	; 255
 1b4:	08 95       	ret

000001b6 <__fp_split3>:
 1b6:	57 fd       	sbrc	r21, 7
 1b8:	90 58       	subi	r25, 0x80	; 128
 1ba:	44 0f       	add	r20, r20
 1bc:	55 1f       	adc	r21, r21
 1be:	59 f0       	breq	.+22     	; 0x1d6 <__fp_splitA+0x10>
 1c0:	5f 3f       	cpi	r21, 0xFF	; 255
 1c2:	71 f0       	breq	.+28     	; 0x1e0 <__fp_splitA+0x1a>
 1c4:	47 95       	ror	r20

000001c6 <__fp_splitA>:
 1c6:	88 0f       	add	r24, r24
 1c8:	97 fb       	bst	r25, 7
 1ca:	99 1f       	adc	r25, r25
 1cc:	61 f0       	breq	.+24     	; 0x1e6 <__fp_splitA+0x20>
 1ce:	9f 3f       	cpi	r25, 0xFF	; 255
 1d0:	79 f0       	breq	.+30     	; 0x1f0 <__fp_splitA+0x2a>
 1d2:	87 95       	ror	r24
 1d4:	08 95       	ret
 1d6:	12 16       	cp	r1, r18
 1d8:	13 06       	cpc	r1, r19
 1da:	14 06       	cpc	r1, r20
 1dc:	55 1f       	adc	r21, r21
 1de:	f2 cf       	rjmp	.-28     	; 0x1c4 <__fp_split3+0xe>
 1e0:	46 95       	lsr	r20
 1e2:	f1 df       	rcall	.-30     	; 0x1c6 <__fp_splitA>
 1e4:	08 c0       	rjmp	.+16     	; 0x1f6 <__fp_splitA+0x30>
 1e6:	16 16       	cp	r1, r22
 1e8:	17 06       	cpc	r1, r23
 1ea:	18 06       	cpc	r1, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	f1 cf       	rjmp	.-30     	; 0x1d2 <__fp_splitA+0xc>
 1f0:	86 95       	lsr	r24
 1f2:	71 05       	cpc	r23, r1
 1f4:	61 05       	cpc	r22, r1
 1f6:	08 94       	sec
 1f8:	08 95       	ret

000001fa <__fp_zero>:
 1fa:	e8 94       	clt

000001fc <__fp_szero>:
 1fc:	bb 27       	eor	r27, r27
 1fe:	66 27       	eor	r22, r22
 200:	77 27       	eor	r23, r23
 202:	cb 01       	movw	r24, r22
 204:	97 f9       	bld	r25, 7
 206:	08 95       	ret

00000208 <__mulsf3>:
 208:	0b d0       	rcall	.+22     	; 0x220 <__mulsf3x>
 20a:	78 c0       	rjmp	.+240    	; 0x2fc <__fp_round>
 20c:	69 d0       	rcall	.+210    	; 0x2e0 <__fp_pscA>
 20e:	28 f0       	brcs	.+10     	; 0x21a <__mulsf3+0x12>
 210:	6e d0       	rcall	.+220    	; 0x2ee <__fp_pscB>
 212:	18 f0       	brcs	.+6      	; 0x21a <__mulsf3+0x12>
 214:	95 23       	and	r25, r21
 216:	09 f0       	breq	.+2      	; 0x21a <__mulsf3+0x12>
 218:	5a c0       	rjmp	.+180    	; 0x2ce <__fp_inf>
 21a:	5f c0       	rjmp	.+190    	; 0x2da <__fp_nan>
 21c:	11 24       	eor	r1, r1
 21e:	ee cf       	rjmp	.-36     	; 0x1fc <__fp_szero>

00000220 <__mulsf3x>:
 220:	ca df       	rcall	.-108    	; 0x1b6 <__fp_split3>
 222:	a0 f3       	brcs	.-24     	; 0x20c <__mulsf3+0x4>

00000224 <__mulsf3_pse>:
 224:	95 9f       	mul	r25, r21
 226:	d1 f3       	breq	.-12     	; 0x21c <__mulsf3+0x14>
 228:	95 0f       	add	r25, r21
 22a:	50 e0       	ldi	r21, 0x00	; 0
 22c:	55 1f       	adc	r21, r21
 22e:	62 9f       	mul	r22, r18
 230:	f0 01       	movw	r30, r0
 232:	72 9f       	mul	r23, r18
 234:	bb 27       	eor	r27, r27
 236:	f0 0d       	add	r31, r0
 238:	b1 1d       	adc	r27, r1
 23a:	63 9f       	mul	r22, r19
 23c:	aa 27       	eor	r26, r26
 23e:	f0 0d       	add	r31, r0
 240:	b1 1d       	adc	r27, r1
 242:	aa 1f       	adc	r26, r26
 244:	64 9f       	mul	r22, r20
 246:	66 27       	eor	r22, r22
 248:	b0 0d       	add	r27, r0
 24a:	a1 1d       	adc	r26, r1
 24c:	66 1f       	adc	r22, r22
 24e:	82 9f       	mul	r24, r18
 250:	22 27       	eor	r18, r18
 252:	b0 0d       	add	r27, r0
 254:	a1 1d       	adc	r26, r1
 256:	62 1f       	adc	r22, r18
 258:	73 9f       	mul	r23, r19
 25a:	b0 0d       	add	r27, r0
 25c:	a1 1d       	adc	r26, r1
 25e:	62 1f       	adc	r22, r18
 260:	83 9f       	mul	r24, r19
 262:	a0 0d       	add	r26, r0
 264:	61 1d       	adc	r22, r1
 266:	22 1f       	adc	r18, r18
 268:	74 9f       	mul	r23, r20
 26a:	33 27       	eor	r19, r19
 26c:	a0 0d       	add	r26, r0
 26e:	61 1d       	adc	r22, r1
 270:	23 1f       	adc	r18, r19
 272:	84 9f       	mul	r24, r20
 274:	60 0d       	add	r22, r0
 276:	21 1d       	adc	r18, r1
 278:	82 2f       	mov	r24, r18
 27a:	76 2f       	mov	r23, r22
 27c:	6a 2f       	mov	r22, r26
 27e:	11 24       	eor	r1, r1
 280:	9f 57       	subi	r25, 0x7F	; 127
 282:	50 40       	sbci	r21, 0x00	; 0
 284:	8a f0       	brmi	.+34     	; 0x2a8 <__mulsf3_pse+0x84>
 286:	e1 f0       	breq	.+56     	; 0x2c0 <__mulsf3_pse+0x9c>
 288:	88 23       	and	r24, r24
 28a:	4a f0       	brmi	.+18     	; 0x29e <__mulsf3_pse+0x7a>
 28c:	ee 0f       	add	r30, r30
 28e:	ff 1f       	adc	r31, r31
 290:	bb 1f       	adc	r27, r27
 292:	66 1f       	adc	r22, r22
 294:	77 1f       	adc	r23, r23
 296:	88 1f       	adc	r24, r24
 298:	91 50       	subi	r25, 0x01	; 1
 29a:	50 40       	sbci	r21, 0x00	; 0
 29c:	a9 f7       	brne	.-22     	; 0x288 <__mulsf3_pse+0x64>
 29e:	9e 3f       	cpi	r25, 0xFE	; 254
 2a0:	51 05       	cpc	r21, r1
 2a2:	70 f0       	brcs	.+28     	; 0x2c0 <__mulsf3_pse+0x9c>
 2a4:	14 c0       	rjmp	.+40     	; 0x2ce <__fp_inf>
 2a6:	aa cf       	rjmp	.-172    	; 0x1fc <__fp_szero>
 2a8:	5f 3f       	cpi	r21, 0xFF	; 255
 2aa:	ec f3       	brlt	.-6      	; 0x2a6 <__mulsf3_pse+0x82>
 2ac:	98 3e       	cpi	r25, 0xE8	; 232
 2ae:	dc f3       	brlt	.-10     	; 0x2a6 <__mulsf3_pse+0x82>
 2b0:	86 95       	lsr	r24
 2b2:	77 95       	ror	r23
 2b4:	67 95       	ror	r22
 2b6:	b7 95       	ror	r27
 2b8:	f7 95       	ror	r31
 2ba:	e7 95       	ror	r30
 2bc:	9f 5f       	subi	r25, 0xFF	; 255
 2be:	c1 f7       	brne	.-16     	; 0x2b0 <__mulsf3_pse+0x8c>
 2c0:	fe 2b       	or	r31, r30
 2c2:	88 0f       	add	r24, r24
 2c4:	91 1d       	adc	r25, r1
 2c6:	96 95       	lsr	r25
 2c8:	87 95       	ror	r24
 2ca:	97 f9       	bld	r25, 7
 2cc:	08 95       	ret

000002ce <__fp_inf>:
 2ce:	97 f9       	bld	r25, 7
 2d0:	9f 67       	ori	r25, 0x7F	; 127
 2d2:	80 e8       	ldi	r24, 0x80	; 128
 2d4:	70 e0       	ldi	r23, 0x00	; 0
 2d6:	60 e0       	ldi	r22, 0x00	; 0
 2d8:	08 95       	ret

000002da <__fp_nan>:
 2da:	9f ef       	ldi	r25, 0xFF	; 255
 2dc:	80 ec       	ldi	r24, 0xC0	; 192
 2de:	08 95       	ret

000002e0 <__fp_pscA>:
 2e0:	00 24       	eor	r0, r0
 2e2:	0a 94       	dec	r0
 2e4:	16 16       	cp	r1, r22
 2e6:	17 06       	cpc	r1, r23
 2e8:	18 06       	cpc	r1, r24
 2ea:	09 06       	cpc	r0, r25
 2ec:	08 95       	ret

000002ee <__fp_pscB>:
 2ee:	00 24       	eor	r0, r0
 2f0:	0a 94       	dec	r0
 2f2:	12 16       	cp	r1, r18
 2f4:	13 06       	cpc	r1, r19
 2f6:	14 06       	cpc	r1, r20
 2f8:	05 06       	cpc	r0, r21
 2fa:	08 95       	ret

000002fc <__fp_round>:
 2fc:	09 2e       	mov	r0, r25
 2fe:	03 94       	inc	r0
 300:	00 0c       	add	r0, r0
 302:	11 f4       	brne	.+4      	; 0x308 <__fp_round+0xc>
 304:	88 23       	and	r24, r24
 306:	52 f0       	brmi	.+20     	; 0x31c <__fp_round+0x20>
 308:	bb 0f       	add	r27, r27
 30a:	40 f4       	brcc	.+16     	; 0x31c <__fp_round+0x20>
 30c:	bf 2b       	or	r27, r31
 30e:	11 f4       	brne	.+4      	; 0x314 <__fp_round+0x18>
 310:	60 ff       	sbrs	r22, 0
 312:	04 c0       	rjmp	.+8      	; 0x31c <__fp_round+0x20>
 314:	6f 5f       	subi	r22, 0xFF	; 255
 316:	7f 4f       	sbci	r23, 0xFF	; 255
 318:	8f 4f       	sbci	r24, 0xFF	; 255
 31a:	9f 4f       	sbci	r25, 0xFF	; 255
 31c:	08 95       	ret

0000031e <_exit>:
 31e:	f8 94       	cli

00000320 <__stop_program>:
 320:	ff cf       	rjmp	.-2      	; 0x320 <__stop_program>
